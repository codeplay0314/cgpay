# View this workflow on GitHub: https://github.com/common-good/cgpay/actions 

# (Optional) Name of the workflow as it appears on GitHub
# name: Deploy to cgpay-dev

# # (Optional) Restricts one active and one pending workflow to the specified environment.
# # concurrency: develop

# # (Optional) Name of the runs generated by the workflow, as they appear on GitHub. Can reference expressions from the `github` context, i.e. `github.actor`.
# run-name: ${{ github.actor }} is deploying ${{ github.ref_name }} to cgpay-dev

# # Specifies the trigger(s) for this workflow, i.e. the `push` event. Can be limited to events on specified branches, paths, or tags.
# # on:
# #   push:
# #     branches:
# #       - develop
# on:
#   push: 
#     branches: [ tools/github-actions ]
#   # workflow_dispatch:

# # Groups together all jobs on this workflow.
# jobs:
#   # Defines a job named `build` and it's properties.
#   build_and_deploy:
#     # Specifies the VM runner that will run this job.
#     runs-on: ubuntu-latest
#     environment: develop

#     strategy:
#       matrix:
#         node-version: [16.x]

#     # Groups together all steps on this job.
#     steps:
#      # Specifies that this step will run `v3` of the `actions/checkout` action. This action checks out our repo onto the runner. Use it for any workflow runs against our repo's code.
#     - name: Checkout repository
#       uses: actions/checkout@v3
#       # The `setup-node` action installs the specified version of Node.js and adds `node` and `npm` commands to `PATH`.
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         # Here, version is specified via the matrix context. It can also be set to exact versions or a single version.
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     # Executes the specified commands on the runner.
#     - name: Install dependencies
#     # `npm ci` installs `package-lock.json` versions and prevents updates to the lock file. It is generally faster than `npm install`.
#       run: npm ci
#     - name: Build deploy files
#       run: npm run build
    # Tests fail because they currently rely on the app runing localhost:3000/empty
    # - name: Run tests
    #   run: npm test @a
    # steps:
    # - name: install ssh keys
    #   # check this thread to understand why its needed:
    #   # https://stackoverflow.com/a/70447517
    #   run: |
    #     mkdir ~/.ssh/
    #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
    #     sudo chmod 600 ~/.ssh/id_rsa
    #     echo ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    # - name: connect to server
    #   run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p 7822 
    # - name: copy dist to server
    #   run: "cp deploy.tar ~/home/new/current"
    # - name: cleanup
    #   run: rm -rf ~/.ssh